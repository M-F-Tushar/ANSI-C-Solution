
3.1 State whether the following statements are true or false:

(a) All variables must be given a type when they are declared.**  
- **True**

**(b) ANSI C treats the variables `name` and `Name` to be the same.**  
- **False**  
*(C is case-sensitive, so `name` and `Name` are treated as different identifiers.)*

**(c) Character constants are coded using double quotes.**  
- **False**  
*(Character constants use single quotes, e.g., `'A'`. Double quotes are for string constants.)*

**(d) The keyword `void` is a data type in C.**  
- **True**  
*(`void` is used to indicate no data type, often in functions that return nothing.)*

**(e) Character constants are enclosed in single quotes while string constants are enclosed in double quotes.**  
- **True**

**(f) Initialization is the process of assigning a value to a variable at the time of declaration.**  
- **True**

**(g) The `scanf` function can be used to read only one value at a time.**  
- **False**  
*(`scanf` can read multiple values in one call if formatted correctly.)*

**(h) C allows its keywords to be also used as identifiers.**  
- **False**  
*(Keywords are reserved and cannot be used as identifiers.)*

**(i) Auto variables are by default initialized to 0 as soon as they are declared.**  
- **False**  
*(Auto variables are not initialized automatically; they contain garbage values unless explicitly initialized.)*

**(j) Floating-point constants, by default, denote `float` type values.**  
- **False**  
*(By default, floating-point constants are of type `double`. To make them `float`, append `f` or `F`.)*

**(k) Like variables, constants have a type.**  
- **True**

**(l) All static variables are automatically initialized to zero.**  
- **True**



